#!/usr/bin/env python3
import os
import re


"""
A Mass file renamer
-------------------
1. to mass rename the file extension to something else.
2. might include the regex support
"""

def getfiles():
    return [i for i in os.listdir('.')]

def stripfilename(fname):
    """ 
    Returns the file name excluding file extension 
    Can Also handle filename with multiple dots/full stops in it
    """
    return os.path.splitext(fname)[0]

def renamePattern(pattern,newExtension):
    newExtension = prepExt(newExtension)
    print("[+] Pattern : [%s]" % pattern)
    files = getfiles()
    matched = []

    for file in files:
        if re.match(pattern,file):
            matched.append(file)
    if len(matched) > 0:
        print("[+] %d files Matched" % len(matched))
        for file in matched:
            rename(file,str(stripfilename(file)+str(''.join(newExtension))))
    else:
        print("[-] No files Matched with pattern %s" % pattern)

def prepExt(*args):
    '''
    Validates and add '.' in front of command arg
    '''
    arg = list(args)
    for pos in range(len(arg)):
        if '.' not in arg[pos]:
            arg[pos] = '.' + str(arg[pos])
    return arg

def renameExtension(oldExtension,newExtension):
    oldExtension, newExtension = prepExt(oldExtension,newExtension)
    # print("[+] Old Extension : ",oldExtension)
    print("[+] %s -> %s" % (oldExtension,newExtension))
    files = getfiles()
    matched = [i for i in files if i.rfind(oldExtension) != -1]
    # keeps track of files needed to rename

    if len(matched) > 0:
        print("[+] %d files matched" % len(matched))
        for file in matched:
            rename(file,str(stripfilename(file)+newExtension))
        print("[+] New Extension : ",newExtension)
    else:
        print("[-] No files matched")

def rename(oldfile,newfile):
    try:
        os.rename(oldfile,newfile)
    except Exception as e:
        print(e)



if __name__ == "__main__":
    import sys
    usage = "Usage\n-----\n"
    usage += "masren old-extension new-extension\n"
    usage += "masren -p pattern new-extension"

    if len(sys.argv) <= 1:
        print(usage)
    else:
        if len(sys.argv) == 4:
            # masren -p pattern newExtension
            #    0    1     2       3
            renamePattern(sys.argv[2],sys.argv[3])

        elif len(sys.argv) == 3:
            # masren old-extension new-extension
            #    0           1            2 
            renameExtension(sys.argv[1],sys.argv[2])
        else:
            print(usage)